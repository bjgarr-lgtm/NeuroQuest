
import {S, save} from '../core/state.js';
export function minigames(){
  const el=document.createElement('section'); el.className='section';
  if(!S.toddler){ el.innerHTML='<h2>Minigames</h2><p>Toddler week only.</p>'; return el; }
  el.innerHTML='<h2>Toddler Minigames</h2><div id="grid" class="tile-grid"></div><div id="host" class="section"></div>';
  const grid=el.querySelector('#grid'); const host=el.querySelector('#host');
  const games=[['pop','Pop Bubbles'],['colors','Color Match'],['float','Balloon Float'],['simon','Simon Pads'],['memory','Mini Memory'],['whack','Whack-a-Slime'],['catch','Catch Stars'],['shapes','Shape Tap']];
  games.forEach(([id,label])=>{ const b=document.createElement('a'); b.className='tile'; b.textContent=label; b.onclick=()=>start(id); grid.appendChild(b); });
  function award(n){ S.toddlerCoins=(S.toddlerCoins||0)+n; save(); }
  function start(id){ host.innerHTML=''; const box=document.createElement('div'); box.style.height='320px'; box.style.position='relative'; host.appendChild(box);
    if(id==='pop'){ let score=0,time=20; const t=setInterval(()=>{ if(--time<=0){ clearInterval(t); clearInterval(sp); award(1+Math.floor(score/6)); host.innerHTML='<h3>Score '+score+'</h3>'; } },1000);
      const sp=setInterval(()=>{ const b=document.createElement('div'); b.className='confetti'; b.style.width='26px'; b.style.height='26px'; b.style.borderRadius='50%'; b.style.background='radial-gradient(#9ff,#37a)'; b.style.left=(Math.random()*(box.clientWidth-30))+'px'; b.style.top=(Math.random()*(box.clientHeight-30))+'px'; b.style.position='absolute'; b.onclick=()=>{ score++; b.remove(); }; box.appendChild(b); setTimeout(()=>b.remove(),2000); },520); }
    else if(id==='colors'){ const colors=['red','blue','green','yellow','purple','orange']; let rounds=6,score=0; const tgt=document.createElement('div'); tgt.style.textAlign='center'; tgt.style.margin='6px 0 12px'; host.appendChild(tgt); const row=document.createElement('div'); row.style.display='flex'; row.style.flexWrap='wrap'; row.style.gap='8px'; host.appendChild(row);
      function next(){ if(rounds--<=0){ award(Math.max(1,score)); host.innerHTML='<h3>Matches '+score+'</h3>'; return; } row.innerHTML=''; const want=colors[Math.floor(Math.random()*colors.length)]; tgt.innerHTML='Find: <b>'+want+'</b>'; const answers=[...colors].sort(()=>Math.random()-.5).slice(0,5); answers.forEach(c=>{ const btn=document.createElement('button'); btn.textContent=c; btn.className='btn'; btn.onclick=()=>{ if(c===want) score++; next(); }; row.appendChild(btn); }); } next(); }
    else if(id==='float'){ const balloon=document.createElement('div'); balloon.style.position='absolute'; balloon.style.width='40px'; balloon.style.height='52px'; balloon.style.borderRadius='50%'; balloon.style.background='#f77'; balloon.style.left='50%'; balloon.style.transform='translateX(-50%)'; box.appendChild(balloon); let y=box.clientHeight*0.5, vy=-0.02, thrust=0, score=0; function step(){ thrust*=0.9; vy+=0.0016-thrust; y+=vy; if(y<10){ y=10; vy*=-0.6; } if(y>box.clientHeight-60){ y=box.clientHeight-60; vy*=-0.6; } balloon.style.top=y+'px'; score++; if(score>800){ cancelAnimationFrame(raf); award(2); host.innerHTML='<h3>Nice floating!</h3>'; return; } raf=requestAnimationFrame(step); } let raf=requestAnimationFrame(step); const on=()=>{thrust=0.02;}, off=()=>{thrust=0;}; box.addEventListener('mousedown',on); box.addEventListener('mouseup',off); box.addEventListener('touchstart',on,{passive:true}); box.addEventListener('touchend',off); }
    else if(id==='simon'){ const pads=['#f44','#46f','#2d6','#dd3'].map(c=>{ const d=document.createElement('button'); d.className='btn'; d.style.background=c; d.style.height='70px'; return d; }); const wrap=document.createElement('div'); wrap.style.display='grid'; wrap.style.gridTemplateColumns='repeat(2,1fr)'; wrap.style.gap='8px'; pads.forEach(p=>wrap.appendChild(p)); host.appendChild(wrap); let seq=[],input=[],level=1,active=false; function flash(p){ p.style.outline='3px solid #fff'; setTimeout(()=>p.style.outline='',250); } function show(){ active=false; input=[]; seq.push(pads[Math.floor(Math.random()*pads.length)]); (async()=>{ for(const p of seq){ flash(p); await new Promise(r=>setTimeout(r,420)); } active=true; })(); } pads.forEach(p=>p.onclick=()=>{ if(!active) return; flash(p); input.push(p); if(p!==seq[input.length-1]) host.innerHTML='<h3>Try again!</h3>'; else if(input.length===seq.length){ level++; if(level>4){ award(2); host.innerHTML='<h3>You win!</h3>'; } else setTimeout(show,450); } }); show(); }
    else if(id==='memory'){ const nums=[1,1,2,2,3,3,4,4,5,5,6,6].sort(()=>Math.random()-.5); const grid=document.createElement('div'); grid.style.display='grid'; grid.style.gridTemplateColumns='repeat(4,1fr)'; grid.style.gap='8px'; host.appendChild(grid); let last=null,matched=0; nums.forEach(n=>{ const c=document.createElement('button'); c.textContent='?'; c.className='btn'; c.dataset.v=n; c.onclick=()=>{ if(c.disabled) return; c.textContent=n; c.disabled=true; if(!last){ last=c; } else { if(last.dataset.v===c.dataset.v){ matched+=2; if(matched===nums.length){ award(2); host.innerHTML='<h3>All matched!</h3>'; } last=null; } else { const a=last; setTimeout(()=>{ a.textContent='?'; a.disabled=false; c.textContent='?'; c.disabled=false; last=null; },650); } } }; grid.appendChild(c); }); }
    else if(id==='whack'){ const grid=document.createElement('div'); grid.style.display='grid'; grid.style.gridTemplateColumns='repeat(4,1fr)'; grid.style.gap='8px'; host.appendChild(grid); let score=0,time=20; const cells=[]; for(let i=0;i<12;i++){ const b=document.createElement('button'); b.className='btn'; b.textContent=''; b.onclick=()=>{ if(b.classList.contains('on')){ score++; b.classList.remove('on'); b.textContent=''; } }; grid.appendChild(b); cells.push(b); } const timer=setInterval(()=>{ if(--time<=0){ clearInterval(timer); clearInterval(spawn); award(1+Math.floor(score/5)); host.innerHTML='<h3>Whacks '+score+'</h3>'; } },1000); const spawn=setInterval(()=>{ cells.forEach(c=>{c.classList.remove('on'); c.textContent='';}); const b=cells[Math.floor(Math.random()*cells.length)]; b.classList.add('on'); b.textContent='üôÇ'; },680); }
    else if(id==='catch'){ const area=document.createElement('div'); area.style.position='relative'; area.style.height='260px'; area.style.background='rgba(255,255,255,.05)'; area.style.borderRadius='12px'; host.appendChild(area); const basket=document.createElement('div'); basket.style.position='absolute'; basket.style.bottom='10px'; basket.style.left='50%'; basket.style.width='90px'; basket.style.height='16px'; basket.style.background='#964B00'; basket.style.borderRadius='8px'; basket.style.transform='translateX(-50%)'; area.appendChild(basket); let x=area.clientWidth/2, speed=6, score=0, time=20; function setX(){ basket.style.left=x+'px'; } function spawn(){ const s=document.createElement('div'); s.style.position='absolute'; s.style.width='14px'; s.style.height='14px'; s.style.borderRadius='50%'; s.style.background='#ffd54f'; s.style.left=(Math.random()*(area.clientWidth-14))+'px'; s.style.top='-10px'; area.appendChild(s); const fall=setInterval(()=>{ s.style.top=(s.offsetTop+4)+'px'; const by=basket.getBoundingClientRect(), sy=s.getBoundingClientRect(); if(sy.bottom>by.top && sy.left<by.right && sy.right>by.left){ score++; s.remove(); clearInterval(fall); } if(s.offsetTop>area.clientHeight) { s.remove(); clearInterval(fall); } },16); } const key=(e)=>{ if(e.key==='ArrowLeft') x-=speed; if(e.key==='ArrowRight') x+=speed; setX(); }; document.addEventListener('keydown', key); const sp=setInterval(spawn,720); const t=setInterval(()=>{ if(--time<=0){ clearInterval(sp); clearInterval(t); document.removeEventListener('keydown',key); award(1+Math.floor(score/5)); host.innerHTML='<h3>Stars '+score+'</h3>'; } },1000); setX(); }
    else if(id==='shapes'){ const row=document.createElement('div'); row.style.display='flex'; row.style.gap='8px'; row.style.flexWrap='wrap'; host.appendChild(row); const shapes=['‚ñ≤','‚óè','‚ñ†','‚óÜ']; let score=0, rounds=8; function next(){ if(rounds--<=0){ award(1+Math.floor(score/3)); host.innerHTML='<h3>Nice taps: '+score+'</h3>'; return; } row.innerHTML=''; const want=shapes[Math.floor(Math.random()*shapes.length)]; const target=document.createElement('div'); target.style.textAlign='center'; target.style.margin='6px 0 12px'; target.innerHTML='Tap all: <b>'+want+'</b>'; host.appendChild(target); const pool=[...shapes,...shapes,...shapes].sort(()=>Math.random()-.5).slice(0,10); pool.forEach(s=>{ const b=document.createElement('button'); b.textContent=s; b.className='btn'; b.onclick=()=>{ if(s===want){ score++; b.disabled=true; b.style.opacity=.5; } }; row.appendChild(b); }); setTimeout(next,1800);} next(); }
  }
  return el;
}
